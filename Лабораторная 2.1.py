if __name__ == "__main__":
    import doctest


    class Мебель:
        """
        Абстрактный класс, представляющий предмет мебели.

        Атрибуты:
            материал (str): Материал мебели.
            цвет (str): Цвет мебели.

        Методы:
            переместить(self, новое_место: str) -> str:
                Перемещает мебель в новое место.

            сломать_мебель(self) -> bool:
                Симулирует поломку мебели.

            получить_цвет(self) -> str:
                Возвращает цвет мебели.
        """

        def __init__(self, материал: str, цвет: str):
            """
            Инициализация предмета мебели.

            :param материал: Материал мебели.
            :param цвет: Цвет мебели.

            Примеры:
            >>> стул = Мебель("Дерево", "Коричневый")
            """
            if not isinstance(материал, str):
                raise TypeError("Материал должен быть строкой (str)")
            self.материал = материал

            if not isinstance(цвет, str):
                raise TypeError("Цвет должен быть строкой (str)")
            self.цвет = цвет

        def переместить(self, новое_место: str) -> str:
            """
            Перемещает мебель в новое место.

            :param новое_место: Новое место для перемещения мебели.

            :return: Сообщение о перемещении мебели.
            """
            ...

        def сломать_мебель(self) -> bool:
            """
            Симулирует поломку мебели.

            :return: True, если мебель сломалась, False в противном случае.
            """
            ...

        def получить_цвет(self) -> str:
            """
            Возвращает цвет мебели.

            :return: Цвет мебели.
            """
            ...


    class УдобныйОбъект:
        """
        Абстрактный класс, представляющий удобный объект.

        Атрибуты:
            уровень_мягкости (int): Уровень мягкости объекта.

        Методы:
            сесть(self) -> str:
                Симулирует сидение на объекте.

            лечь(self) -> str:
                Симулирует ложение на объекте.

            настроить_мягкость(self, новая_мягкость: int) -> None:
                Настраивает уровень мягкости объекта.
        """

        def __init__(self, уровень_мягкости: int):
            """
            Инициализация удобного объекта.

            :param уровень_мягкости: Уровень мягкости объекта.

            Примеры:
            >>> диван = УдобныйОбъект(5)
            """
            if not isinstance(уровень_мягкости, int):
                raise TypeError("Уровень мягкости должен быть целым числом (int)")
            self.уровень_мягкости = уровень_мягкости

        def сесть(self) -> str:
            """
            Симулирует сидение на удобном объекте.

            :return: Сообщение о сидении на объекте.
            """
            ...

        def лечь(self) -> str:
            """
            Симулирует ложение на удобном объекте.

            :return: Сообщение о ложении на объекте.
            """
            ...

        def настроить_мягкость(self, новая_мягкость: int) -> None:
            """
            Настраивает уровень мягкости объекта.

            :param новая_мягкость: Новый уровень мягкости.

            :raise ValueError: Если новый уровень мягкости не находится в допустимом диапазоне.

            Примеры:
            >>> диван = УдобныйОбъект(5)
            >>> диван.настроить_мягкость(7)
            """
            ...


    class Диван:
        def __init__(self, материал: str, цвет: str, уровень_мягкости: int):
            """
            Создание и подготовка к использованию объекта "Диван"

            :param материал: Материал дивана.
            :param цвет: Цвет дивана.
            :param уровень_мягкости: Уровень мягкости дивана.
            Примеры:
            >>> диван = Диван("Кожа", "Черный", 7)
            """
            if not isinstance(материал, str):
                raise TypeError("Материал должен быть строкой (str)")
            self.материал = материал

            if not isinstance(цвет, str):
                raise TypeError("Цвет должен быть строкой (str)")
            self.цвет = цвет

            if not isinstance(уровень_мягкости, int):
                raise TypeError("Уровень мягкости должен быть целым числом (int)")
            self.уровень_мягкости = уровень_мягкости

        def сесть_на_диван(self) -> str:
            """
            Симуляция сидения на диване.

            :return: Сообщение о сидении на диване.

            Примеры:
            >>> диван = Диван("Кожа", "Черный", 7)
            >>> диван.сесть_на_диван()
            """
            ...

        def лечь_на_диван(self) -> str:
            """
            Симуляция лежания на диване.

            :return: Сообщение о лежании на диване.

            Примеры:
            >>> диван = Диван("Кожа", "Черный", 7)
            >>> диван.лечь_на_диван()
            """
            ...


    # Furniture doctest
    doctest.testmod(Мебель)

    # ComfortableObject doctest
    doctest.testmod(УдобныйОбъект)

    # Sofa doctest
    doctest.testmod(Диван)